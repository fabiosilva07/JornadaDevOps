{"ast":null,"code":"import React from\"react\";import{FormDiv,FormInput,Label}from'./styles';function FormField(_ref){var label=_ref.label,type=_ref.type,name=_ref.name,value=_ref.value,onChange=_ref.onChange,suggestions=_ref.suggestions;var fieldId=\"id_\".concat(name);var isTextArea=type==='textarea';var tag=isTextArea?'textarea':'input';var hasValue=Boolean(value.length);var hasSuggestions=Boolean(suggestions.length);return/*#__PURE__*/React.createElement(FormDiv,null,/*#__PURE__*/React.createElement(Label,null,/*#__PURE__*/React.createElement(FormInput,{as:tag,id:fieldId,type:type,value:value,name:name,hasValue:hasValue,onChange:onChange,autoComplete:hasSuggestions?'off':'on',list:hasSuggestions?\"suggestionFor_\".concat(fieldId):undefined}),/*#__PURE__*/React.createElement(Label.Text,null,label,\":\"),hasSuggestions&&/*#__PURE__*/React.createElement(\"datalist\",{id:\"suggestionFor_\".concat(fieldId)},suggestions.map(function(suggestion){return/*#__PURE__*/React.createElement(\"option\",{value:suggestion,key:\"suggestionFor_\".concat(fieldId,\"_option\").concat(suggestion)},suggestion);}))));}FormField.defaultProps={type:'text',value:'',onChange:function onChange(){},suggestions:[]};export default FormField;","map":{"version":3,"sources":["/app/src/components/FormField/index.js"],"names":["React","FormDiv","FormInput","Label","FormField","label","type","name","value","onChange","suggestions","fieldId","isTextArea","tag","hasValue","Boolean","length","hasSuggestions","undefined","map","suggestion","defaultProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,CAAmBC,SAAnB,CAA+BC,KAA/B,KAA2C,UAA3C,CAEA,QAASC,CAAAA,SAAT,MAAuE,IAAlDC,CAAAA,KAAkD,MAAlDA,KAAkD,CAA3CC,IAA2C,MAA3CA,IAA2C,CAArCC,IAAqC,MAArCA,IAAqC,CAA/BC,KAA+B,MAA/BA,KAA+B,CAAxBC,QAAwB,MAAxBA,QAAwB,CAAdC,WAAc,MAAdA,WAAc,CACnE,GAAMC,CAAAA,OAAO,cAASJ,IAAT,CAAb,CACA,GAAMK,CAAAA,UAAU,CAAGN,IAAI,GAAK,UAA5B,CACA,GAAMO,CAAAA,GAAG,CAAGD,UAAU,CAAG,UAAH,CAAgB,OAAtC,CAEA,GAAME,CAAAA,QAAQ,CAAGC,OAAO,CAACP,KAAK,CAACQ,MAAP,CAAxB,CACA,GAAMC,CAAAA,cAAc,CAAGF,OAAO,CAACL,WAAW,CAACM,MAAb,CAA9B,CAEA,mBACI,oBAAC,OAAD,mBACI,oBAAC,KAAD,mBACI,oBAAC,SAAD,EACI,EAAE,CAAEH,GADR,CAEI,EAAE,CAAEF,OAFR,CAGI,IAAI,CAAEL,IAHV,CAII,KAAK,CAAEE,KAJX,CAKI,IAAI,CAAED,IALV,CAMI,QAAQ,CAAEO,QANd,CAOI,QAAQ,CAAEL,QAPd,CAQI,YAAY,CAAEQ,cAAc,CAAG,KAAH,CAAW,IAR3C,CASI,IAAI,CAAEA,cAAc,yBAAoBN,OAApB,EAAgCO,SATxD,EADJ,cAYI,oBAAC,KAAD,CAAO,IAAP,MACKb,KADL,KAZJ,CAiBQY,cAAc,eACV,gCAAU,EAAE,yBAAmBN,OAAnB,CAAZ,EAEAD,WAAW,CAACS,GAAZ,CAAgB,SAACC,UAAD,qBACZ,8BAAQ,KAAK,CAAEA,UAAf,CAA2B,GAAG,yBAAmBT,OAAnB,mBAAoCS,UAApC,CAA9B,EACCA,UADD,CADY,EAAhB,CAFA,CAlBZ,CADJ,CADJ,CAkCH,CAEDhB,SAAS,CAACiB,YAAV,CAAyB,CACrBf,IAAI,CAAE,MADe,CAErBE,KAAK,CAAE,EAFc,CAGrBC,QAAQ,CAAE,mBAAM,CAAE,CAHG,CAIrBC,WAAW,CAAE,EAJQ,CAAzB,CAOA,cAAeN,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport { FormDiv , FormInput , Label} from './styles';\n\nfunction FormField({ label, type, name, value, onChange ,suggestions}) {\n    const fieldId = `id_${name}`;\n    const isTextArea = type === 'textarea';\n    const tag = isTextArea ? 'textarea' : 'input';\n\n    const hasValue = Boolean(value.length);\n    const hasSuggestions = Boolean(suggestions.length);\n\n    return (\n        <FormDiv>\n            <Label>\n                <FormInput\n                    as={tag}\n                    id={fieldId}\n                    type={type}\n                    value={value}\n                    name={name}\n                    hasValue={hasValue}\n                    onChange={onChange}\n                    autoComplete={hasSuggestions ? 'off' : 'on'}\n                    list={hasSuggestions ? `suggestionFor_${fieldId}` : undefined}\n                />\n                <Label.Text>\n                    {label}:\n                </Label.Text>\n\n                {\n                    hasSuggestions && (\n                        <datalist id={`suggestionFor_${fieldId}`}>\n                        {\n                        suggestions.map((suggestion) => (\n                            <option value={suggestion} key={`suggestionFor_${fieldId}_option${suggestion}`}>\n                            {suggestion}\n                            </option>\n                        ))\n                        }\n                        </datalist>\n                    )\n                }\n            </Label>\n        </FormDiv>\n    );\n}\n\nFormField.defaultProps = {\n    type: 'text',\n    value: '',\n    onChange: () => {},\n    suggestions: [],\n  };\n\nexport default FormField;"]},"metadata":{},"sourceType":"module"}