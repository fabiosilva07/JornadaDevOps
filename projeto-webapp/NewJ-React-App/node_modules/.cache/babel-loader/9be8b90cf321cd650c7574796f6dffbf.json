{"ast":null,"code":"import _regeneratorRuntime from\"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import config from'../config';var URL_CATEGORIES=\"\".concat(config.URL_BACKEND_TOP,\"/categorias\");function create(objetoDaCategoria){return fetch(\"\".concat(URL_CATEGORIES),{method:'POST',headers:{'Content-type':'application/json'},body:JSON.stringify(objetoDaCategoria)}).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(respostaDoServidor){var resposta;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!respostaDoServidor.ok){_context.next=5;break;}_context.next=3;return respostaDoServidor.json();case 3:resposta=_context.sent;return _context.abrupt(\"return\",resposta);case 5:throw new Error('Não foi possível cadastrar os dados :(');case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());}function getAll(){return fetch(\"\".concat(URL_CATEGORIES)).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(respostaDoServidor){var resposta;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!respostaDoServidor.ok){_context2.next=5;break;}_context2.next=3;return respostaDoServidor.json();case 3:resposta=_context2.sent;return _context2.abrupt(\"return\",resposta);case 5:throw new Error('Não foi possível pegar os dados :(');case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());}function getAllWithVideos(){return fetch(\"\".concat(URL_CATEGORIES,\"?_embed=videos\")).then(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(respostaDoServidor){var resposta;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!respostaDoServidor.ok){_context3.next=5;break;}_context3.next=3;return respostaDoServidor.json();case 3:resposta=_context3.sent;return _context3.abrupt(\"return\",resposta);case 5:throw new Error('Não foi possível pegar os dados :(');case 6:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}());}export default{getAllWithVideos:getAllWithVideos,getAll:getAll,create:create};","map":{"version":3,"sources":["/app/src/repositories/categorias.js"],"names":["config","URL_CATEGORIES","URL_BACKEND_TOP","create","objetoDaCategoria","fetch","method","headers","body","JSON","stringify","then","respostaDoServidor","ok","json","resposta","Error","getAll","getAllWithVideos"],"mappings":"mPAAA,MAAOA,CAAAA,MAAP,KAAmB,WAAnB,CAEA,GAAMC,CAAAA,cAAc,WAAMD,MAAM,CAACE,eAAb,eAApB,CAEA,QAASC,CAAAA,MAAT,CAAgBC,iBAAhB,CAAmC,CACjC,MAAOC,CAAAA,KAAK,WAAIJ,cAAJ,EAAsB,CAChCK,MAAM,CAAE,MADwB,CAEhCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFuB,CAKhCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,iBAAf,CAL0B,CAAtB,CAAL,CAOJO,IAPI,0FAOC,iBAAOC,kBAAP,mIACAA,kBAAkB,CAACC,EADnB,+CAEqBD,CAAAA,kBAAkB,CAACE,IAAnB,EAFrB,QAEIC,QAFJ,+CAGKA,QAHL,cAME,IAAIC,CAAAA,KAAJ,CAAU,wCAAV,CANF,uDAPD,+DAAP,CAeD,CAED,QAASC,CAAAA,MAAT,EAAkB,CAChB,MAAOZ,CAAAA,KAAK,WAAIJ,cAAJ,EAAL,CACJU,IADI,2FACC,kBAAOC,kBAAP,uIACAA,kBAAkB,CAACC,EADnB,iDAEqBD,CAAAA,kBAAkB,CAACE,IAAnB,EAFrB,QAEIC,QAFJ,iDAGKA,QAHL,cAME,IAAIC,CAAAA,KAAJ,CAAU,oCAAV,CANF,yDADD,iEAAP,CASD,CAED,QAASE,CAAAA,gBAAT,EAA4B,CAC1B,MAAOb,CAAAA,KAAK,WAAIJ,cAAJ,mBAAL,CACJU,IADI,2FACC,kBAAOC,kBAAP,uIACAA,kBAAkB,CAACC,EADnB,iDAEqBD,CAAAA,kBAAkB,CAACE,IAAnB,EAFrB,QAEIC,QAFJ,iDAGKA,QAHL,cAME,IAAIC,CAAAA,KAAJ,CAAU,oCAAV,CANF,yDADD,iEAAP,CASD,CAED,cAAe,CACbE,gBAAgB,CAAhBA,gBADa,CAEbD,MAAM,CAANA,MAFa,CAGbd,MAAM,CAANA,MAHa,CAAf","sourcesContent":["import config from '../config';\n\nconst URL_CATEGORIES = `${config.URL_BACKEND_TOP}/categorias`;\n\nfunction create(objetoDaCategoria) {\n  return fetch(`${URL_CATEGORIES}`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(objetoDaCategoria),\n  })\n    .then(async (respostaDoServidor) => {\n      if (respostaDoServidor.ok) {\n        const resposta = await respostaDoServidor.json();\n        return resposta;\n      }\n\n      throw new Error('Não foi possível cadastrar os dados :(');\n    });\n}\n\nfunction getAll() {\n  return fetch(`${URL_CATEGORIES}`)\n    .then(async (respostaDoServidor) => {\n      if (respostaDoServidor.ok) {\n        const resposta = await respostaDoServidor.json();\n        return resposta;\n      }\n\n      throw new Error('Não foi possível pegar os dados :(');\n    });\n}\n\nfunction getAllWithVideos() {\n  return fetch(`${URL_CATEGORIES}?_embed=videos`)\n    .then(async (respostaDoServidor) => {\n      if (respostaDoServidor.ok) {\n        const resposta = await respostaDoServidor.json();\n        return resposta;\n      }\n\n      throw new Error('Não foi possível pegar os dados :(');\n    });\n}\n\nexport default {\n  getAllWithVideos,\n  getAll,\n  create,\n};"]},"metadata":{},"sourceType":"module"}