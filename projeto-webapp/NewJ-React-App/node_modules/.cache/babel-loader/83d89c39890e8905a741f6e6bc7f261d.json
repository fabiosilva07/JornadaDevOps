{"ast":null,"code":"import _regeneratorRuntime from\"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import config from'../config';var URL_VIDEOS=\"\".concat(config.URL_BACKEND_TOP,\"/videos\");function create(objetoDoVideo){return fetch(\"\".concat(URL_VIDEOS,\"?_embed=videos\"),{method:'POST',headers:{'Content-type':'application/json'},body:JSON.stringify(objetoDoVideo)}).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(respostaDoServidor){var resposta;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!respostaDoServidor.ok){_context.next=5;break;}_context.next=3;return respostaDoServidor.json();case 3:resposta=_context.sent;return _context.abrupt(\"return\",resposta);case 5:throw new Error('Não foi possível cadastrar os dados :(');case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());}export default{create:create};","map":{"version":3,"sources":["/app/src/repositories/videos.js"],"names":["config","URL_VIDEOS","URL_BACKEND_TOP","create","objetoDoVideo","fetch","method","headers","body","JSON","stringify","then","respostaDoServidor","ok","json","resposta","Error"],"mappings":"mPAAA,MAAOA,CAAAA,MAAP,KAAmB,WAAnB,CAEA,GAAMC,CAAAA,UAAU,WAAMD,MAAM,CAACE,eAAb,WAAhB,CAEA,QAASC,CAAAA,MAAT,CAAgBC,aAAhB,CAA+B,CAC7B,MAAOC,CAAAA,KAAK,WAAIJ,UAAJ,mBAAgC,CAC1CK,MAAM,CAAE,MADkC,CAE1CC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFiC,CAK1CC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,aAAf,CALoC,CAAhC,CAAL,CAOJO,IAPI,0FAOC,iBAAOC,kBAAP,mIACAA,kBAAkB,CAACC,EADnB,+CAEqBD,CAAAA,kBAAkB,CAACE,IAAnB,EAFrB,QAEIC,QAFJ,+CAGKA,QAHL,cAME,IAAIC,CAAAA,KAAJ,CAAU,wCAAV,CANF,uDAPD,+DAAP,CAeD,CAED,cAAe,CACbb,MAAM,CAANA,MADa,CAAf","sourcesContent":["import config from '../config';\n\nconst URL_VIDEOS = `${config.URL_BACKEND_TOP}/videos`;\n\nfunction create(objetoDoVideo) {\n  return fetch(`${URL_VIDEOS}?_embed=videos`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(objetoDoVideo),\n  })\n    .then(async (respostaDoServidor) => {\n      if (respostaDoServidor.ok) {\n        const resposta = await respostaDoServidor.json();\n        return resposta;\n      }\n\n      throw new Error('Não foi possível cadastrar os dados :(');\n    });\n}\n\nexport default {\n  create,\n};"]},"metadata":{},"sourceType":"module"}